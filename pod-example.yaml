apiVersion: v1
kind: Pod
metadata:
  annotations:
    autoscaling.knative.dev/minScale: "1"
    boot.spring.io/version: 3.0.1
    conventions.carto.run/applied-conventions: |-
      appliveview-sample/app-live-view-appflavour-check
      spring-boot-convention/auto-configure-actuators-check
      spring-boot-convention/spring-boot
      spring-boot-convention/spring-boot-graceful-shutdown
      spring-boot-convention/spring-boot-web
      spring-boot-convention/spring-boot-actuator
      spring-boot-convention/spring-boot-actuator-probes
      spring-boot-convention/app-live-view-appflavour-check
      spring-boot-convention/app-live-view-connector-boot
      spring-boot-convention/app-live-view-appflavours-boot
    developer.conventions/target-containers: workload
    kubernetes.io/limit-ranger: 'LimitRanger plugin set: cpu, memory request for container
      workload; cpu, memory limit for container workload'
    kubernetes.io/psp: eks.privileged
    serving.knative.dev/creator: system:serviceaccount:jeremy:default
  creationTimestamp: "2023-08-16T18:21:07Z"
  generateName: cook-app-two-00001-deployment-54894f84bf-
  labels:
    app: cook-app-two-00001
    app.kubernetes.io/component: run
    app.kubernetes.io/part-of: cook-app-two
    apps.tanzu.vmware.com/auto-configure-actuators: "false"
    apps.tanzu.vmware.com/workload-type: web
    carto.run/workload-name: cook-app-two
    conventions.carto.run/framework: spring-boot
    pod-template-hash: 54894f84bf
    serving.knative.dev/configuration: cook-app-two
    serving.knative.dev/configurationGeneration: "1"
    serving.knative.dev/configurationUID: 6de323c7-1692-49d8-9c81-012ce090731d
    serving.knative.dev/revision: cook-app-two-00001
    serving.knative.dev/revisionUID: a4710f3e-2c7e-44b5-bec1-529b564ed2e5
    serving.knative.dev/service: cook-app-two
    serving.knative.dev/serviceUID: 40ca72be-8bb1-4792-8e71-8e91d0ebcda2
    tanzu.app.live.view: "true"
    tanzu.app.live.view.application.actuator.path: actuator
    tanzu.app.live.view.application.actuator.port: "8080"
    tanzu.app.live.view.application.flavours: spring-boot
    tanzu.app.live.view.application.name: cook-app-two
  name: cook-app-two-00001-deployment-54894f84bf-w5sxf
  namespace: jeremy
  ownerReferences:
  - apiVersion: apps/v1
    blockOwnerDeletion: true
    controller: true
    kind: ReplicaSet
    name: cook-app-two-00001-deployment-54894f84bf
    uid: c6e23a0e-0579-46bd-a5a3-b95351797850
  resourceVersion: "165352068"
  uid: e465f5c1-ea6a-480a-884d-404e60c5db9a
spec:
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: topology.kubernetes.io/zone
            operator: In
            values:
            - jeremy
            - joe
  containers:
  - env:
    - name: SPRING_CONFIG_IMPORT
      value: optional:configtree:${SERVICE_BINDING_ROOT}/spring-properties/
    - name: SPRING_CLOUD_CONFIG_ENABLED
      value: "false"
    - name: SPRING_PROFILES_ACTIVE
      value: prod
    - name: JAVA_TOOL_OPTIONS
      value: -Dmanagement.endpoint.health.probes.add-additional-paths="true" -Dmanagement.health.probes.enabled="true"
        -Dserver.port="8080" -Dserver.shutdown.grace-period="24s"
    - name: SERVICE_BINDING_ROOT
      value: /bindings
    - name: PORT
      value: "8080"
    - name: K_REVISION
      value: cook-app-two-00001
    - name: K_CONFIGURATION
      value: cook-app-two
    - name: K_SERVICE
      value: cook-app-two
    image: registry.harbor.learn.tapsme.org/tap-build/workloads/cook-app-two-jeremy@sha256:7881093562ec0c91420cade3c497ffd4a8b63397986a5c6ac7645bfdf09c8a28
    imagePullPolicy: IfNotPresent
    lifecycle:
      preStop:
        httpGet:
          path: /wait-for-drain
          port: 8022
          scheme: HTTP
    livenessProbe:
      failureThreshold: 3
      httpGet:
        httpHeaders:
        - name: K-Kubelet-Probe
          value: queue
        path: /livez
        port: 8080
        scheme: HTTP
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 1
    name: workload
    ports:
    - containerPort: 8080
      name: user-port
      protocol: TCP
    resources:
      limits:
        cpu: 1500m
        memory: 1Gi
      requests:
        cpu: 100m
        memory: 1Gi
    securityContext:
      runAsUser: 1000
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: FallbackToLogsOnError
    volumeMounts:
    - mountPath: /bindings/spring-properties
      name: binding-7ba628dd273080697ab82499b778f5c7fdfa4ec7
      readOnly: true
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-5swrr
      readOnly: true
  - env:
    - name: SERVING_NAMESPACE
      value: jeremy
    - name: SERVING_SERVICE
      value: cook-app-two
    - name: SERVING_CONFIGURATION
      value: cook-app-two
    - name: SERVING_REVISION
      value: cook-app-two-00001
    - name: QUEUE_SERVING_PORT
      value: "8012"
    - name: QUEUE_SERVING_TLS_PORT
      value: "8112"
    - name: CONTAINER_CONCURRENCY
      value: "0"
    - name: REVISION_TIMEOUT_SECONDS
      value: "300"
    - name: REVISION_RESPONSE_START_TIMEOUT_SECONDS
      value: "0"
    - name: REVISION_IDLE_TIMEOUT_SECONDS
      value: "0"
    - name: SERVING_POD
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: metadata.name
    - name: SERVING_POD_IP
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: status.podIP
    - name: SERVING_LOGGING_CONFIG
    - name: SERVING_LOGGING_LEVEL
    - name: SERVING_REQUEST_LOG_TEMPLATE
      value: '{"httpRequest": {"requestMethod": "{{.Request.Method}}", "requestUrl":
        "{{js .Request.RequestURI}}", "requestSize": "{{.Request.ContentLength}}",
        "status": {{.Response.Code}}, "responseSize": "{{.Response.Size}}", "userAgent":
        "{{js .Request.UserAgent}}", "remoteIp": "{{js .Request.RemoteAddr}}", "serverIp":
        "{{.Revision.PodIP}}", "referer": "{{js .Request.Referer}}", "latency": "{{.Response.Latency}}s",
        "protocol": "{{.Request.Proto}}"}, "traceId": "{{index .Request.Header "X-B3-Traceid"}}"}'
    - name: SERVING_ENABLE_REQUEST_LOG
      value: "false"
    - name: SERVING_REQUEST_METRICS_BACKEND
      value: prometheus
    - name: TRACING_CONFIG_BACKEND
      value: none
    - name: TRACING_CONFIG_ZIPKIN_ENDPOINT
    - name: TRACING_CONFIG_DEBUG
      value: "false"
    - name: TRACING_CONFIG_SAMPLE_RATE
      value: "0.1"
    - name: USER_PORT
      value: "8080"
    - name: SYSTEM_NAMESPACE
      value: knative-serving
    - name: METRICS_DOMAIN
      value: knative.dev/internal/serving
    - name: SERVING_READINESS_PROBE
      value: '{"httpGet":{"path":"/readyz","port":8080,"host":"127.0.0.1","scheme":"HTTP","httpHeaders":[{"name":"K-Kubelet-Probe","value":"queue"}]},"successThreshold":1}'
    - name: ENABLE_PROFILING
      value: "false"
    - name: SERVING_ENABLE_PROBE_REQUEST_LOG
      value: "false"
    - name: METRICS_COLLECTOR_ADDRESS
    - name: HOST_IP
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: status.hostIP
    - name: ENABLE_HTTP2_AUTO_DETECTION
      value: "false"
    - name: ROOT_CA
    image: registry.harbor.learn.tapsme.org/tap/tap-packages@sha256:f482d9f34a601f9aae1fa49a267de086e64ebd8670257d4439f1f4b228ffade7
    imagePullPolicy: IfNotPresent
    name: queue-proxy
    ports:
    - containerPort: 8022
      name: http-queueadm
      protocol: TCP
    - containerPort: 9090
      name: http-autometric
      protocol: TCP
    - containerPort: 9091
      name: http-usermetric
      protocol: TCP
    - containerPort: 8012
      name: queue-port
      protocol: TCP
    - containerPort: 8112
      name: https-port
      protocol: TCP
    readinessProbe:
      failureThreshold: 3
      httpGet:
        httpHeaders:
        - name: K-Network-Probe
          value: queue
        path: /
        port: 8012
        scheme: HTTP
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 1
    resources:
      limits:
        cpu: "1"
        memory: 200Mi
      requests:
        cpu: 25m
        memory: 50Mi
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
      readOnlyRootFilesystem: true
      runAsNonRoot: true
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-5swrr
      readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: false
  imagePullSecrets:
  - name: registries-credentials
  preemptionPolicy: PreemptLowerPriority
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext: {}
  serviceAccount: default
  serviceAccountName: default
  terminationGracePeriodSeconds: 300
  tolerations:
  - effect: NoSchedule
    key: test
    operator: Exists
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 300
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 300
  volumes:
  - name: binding-7ba628dd273080697ab82499b778f5c7fdfa4ec7
    projected:
      defaultMode: 420
      sources:
      - secret:
          name: cook-app-two-config-n9cmf
  - name: kube-api-access-5swrr
    projected:
      defaultMode: 420
      sources:
      - serviceAccountToken:
          expirationSeconds: 3607
          path: token
      - configMap:
          items:
          - key: ca.crt
            path: ca.crt
          name: kube-root-ca.crt
      - downwardAPI:
          items:
          - fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
            path: namespace
status:
  conditions:
  - lastProbeTime: null
    lastTransitionTime: "2023-08-16T18:21:07Z"
    message: '0/3 nodes are available: 3 node(s) didn''t match Pod''s node affinity/selector.
      preemption: 0/3 nodes are available: 3 Preemption is not helpful for scheduling.'
    reason: Unschedulable
    status: "False"
    type: PodScheduled
  phase: Pending
  qosClass: Burstable
